{"version":3,"sources":["actions.js","components/CheckoutSidebar.js","components/Header.js","pages/Home.js","components/Product.js","components/ProductList.js","pages/Shop.js","data.js","App.js","utils/helpers.js","reducer.js","index.js"],"names":["CLOSE_CHECKOUT","OPEN_CHECKOUT","LOAD_DATA","TOGGLE_AMOUNT","ADD_TO_CART","REMOVE_CART","UPDATE_CART_AMOUNT","GET_CART_TOTALS","connect","state","cart","cartAmount","cartTotal","checkout","dispatch","closeCheckout","type","removeFromCart","id","payload","updateCartAmount","value","length","className","onClick","map","cartItems","name","price","amount","img","src","alt","openCheckout","to","Home","toggleAmount","addToCart","product","e","target","products","Shop","pies","useEffect","data","exact","path","setMinMaxAmount","changeButtonStyle","element","innerText","classList","add","setTimeout","remove","reducer","action","tempProduct","newAmount","find","tempCart","cartItem","resetProducts","newCart","filter","getTotals","reduce","total","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23e497d8.chunk.js","sourcesContent":["const CLOSE_CHECKOUT = \"CLOSE_CHECKOUT\";\nconst OPEN_CHECKOUT = \"OPEN_CHECKOUT\";\nconst LOAD_DATA = \"LOAD_DATA\";\nconst TOGGLE_AMOUNT = \"TOGGLE_AMOUNT\";\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_CART = \"REMOVE_CART\";\nconst UPDATE_CART_AMOUNT = \"UPDATE_CART_AMOUNT\";\nconst GET_CART_TOTALS = \"GET_CART_TOTALS\";\n\nexport {\n  OPEN_CHECKOUT,\n  CLOSE_CHECKOUT,\n  LOAD_DATA,\n  TOGGLE_AMOUNT,\n  ADD_TO_CART,\n  REMOVE_CART,\n  UPDATE_CART_AMOUNT,\n  GET_CART_TOTALS,\n};\n","// Connect to the Redux store\nimport { connect } from \"react-redux\";\n/* Icons */\nimport { IoClose } from \"react-icons/io5\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\n// Actions\nimport { CLOSE_CHECKOUT, REMOVE_CART, UPDATE_CART_AMOUNT } from \"../actions\";\n\nconst CheckoutSidebar = ({\n  cart = [],\n  checkout,\n  closeCheckout,\n  removeFromCart,\n  cartTotal,\n  cartAmount,\n  updateCartAmount,\n}) => {\n  // If empty cart\n  if (cart.length === 0) {\n    return (\n      <div\n        className={`${\n          checkout ? \"checkout-container show-checkout\" : \"checkout-container\"\n        }`}\n      >\n        <div className=\"checkout-header\">\n          <h3>Cart</h3>\n          <button type=\"button\" onClick={closeCheckout}>\n            <IoClose />\n          </button>\n        </div>\n        <h1>Your cart is empty!</h1>\n      </div>\n    );\n  }\n\n  // If cart has items\n  return (\n    <div\n      className={`${\n        checkout ? \"checkout-container show-checkout\" : \"checkout-container\"\n      }`}\n    >\n      <div className=\"checkout-header\">\n        <h3>CHECKOUT</h3>\n        <button type=\"button\" onClick={closeCheckout}>\n          <IoClose />\n        </button>\n      </div>\n\n      {/* List of cart item */}\n      <div className=\"checkout-product-list\">\n        {/* Display cart item */}\n        {cart.map((cartItems) => {\n          const { id, name, price, amount, img } = cartItems;\n          return (\n            <div key={id} className=\"checkout-product\">\n              <div className=\"checkout-left\">\n                {/* Control Amount */}\n                <div className=\"product-quantity\">\n                  <button\n                    type=\"submit\"\n                    onClick={() => updateCartAmount(id, \"increase\")}\n                  >\n                    <FaPlus />\n                  </button>\n                  <p>\n                    <span className=\"yellow\"> x</span>\n                    {amount}\n                  </p>\n                  <button\n                    type=\"submit\"\n                    onClick={() => updateCartAmount(id, \"decrease\")}\n                  >\n                    <FaMinus />\n                  </button>\n                </div>\n                <div className=\"img-checkout\">\n                  <img src={img} alt={name} />\n                </div>\n                <p>\n                  {name} (<span className=\"blue\">${price}</span>){\" \"}\n                </p>\n              </div>\n              <button type=\"submit\" onClick={() => removeFromCart(id)}>\n                <BiTrash />\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      <h4>\n        Subtotal:\n        <span className=\"blue\"> ${cartTotal}</span>\n      </h4>\n      <h5>({cartAmount} items)</h5>\n      <button className=\"btn checkout-button\">Proceed to Checout</button>\n    </div>\n  );\n};\n\n// map the states and make them accessible as prop in the component\nconst mapStateToProps = (state) => {\n  return {\n    cart: state.cart,\n    cartAmount: state.cartAmount,\n    cartTotal: state.cartTotal,\n    checkout: state.checkout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeCheckout: () => dispatch({ type: CLOSE_CHECKOUT }),\n    removeFromCart: (id) => dispatch({ type: REMOVE_CART, payload: id }),\n    updateCartAmount: (id, value) =>\n      dispatch({ type: UPDATE_CART_AMOUNT, payload: { id, value } }),\n  };\n};\n\n// Connect wraps the component and make accessible the store to the component\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutSidebar);\n","import { Link } from \"react-router-dom\";\n// Connect component to redux\nimport { connect } from \"react-redux\";\n// Icons\nimport { GiPieSlice } from \"react-icons/gi\";\nimport { RiShoppingCart2Fill } from \"react-icons/ri\";\n// Components\nimport CheckoutSidebar from \"./CheckoutSidebar\";\n// Actions\nimport { OPEN_CHECKOUT, CLOSE_CHECKOUT } from \"../actions\";\n\nconst Header = ({ cartAmount, closeCheckout, openCheckout }) => {\n  return (\n    <div className=\"container-center header-container\">\n      <h1 className=\"logo\">\n        <Link to=\"/\">\n          Happy Pie <GiPieSlice className=\"logo-icon\" />\n        </Link>\n      </h1>\n      <div className=\"navigation\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" className=\"nav-link\" onClick={closeCheckout}>\n                home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/Shop\" className=\"nav-link\" onClick={closeCheckout}>\n                Shop\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"shopping-cart\">\n          <button\n            type=\"button\"\n            className=\"cart-button btn\"\n            onClick={openCheckout}\n          >\n            <RiShoppingCart2Fill className=\"cart-icon\" /> ({cartAmount})\n          </button>\n        </div>\n      </div>\n      {/* Checkout sidebar is hidden with CSS */}\n      <CheckoutSidebar />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { cartAmount: state.cartAmount };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    openCheckout: () => dispatch({ type: OPEN_CHECKOUT }),\n    closeCheckout: () => dispatch({ type: CLOSE_CHECKOUT }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import { Link } from \"react-router-dom\";\n// Icons\nimport { AiFillHeart } from \"react-icons/ai\";\n\nconst Home = () => {\n  return (\n    <section className=\"container-center home-container\">\n      <h2>Our Winter selection is here!</h2>\n      <img\n        src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-holiday-pie-board-1637082047.jpg?crop=0.820xw:0.804xh;0.105xw,0.0891xh&resize=980:*\"\n        alt=\"winter pies\"\n      />\n      <Link to=\"/shop\" className=\"btn shop-btn\">\n        Shop Now <AiFillHeart className=\"shop-btn-icon\" />\n      </Link>\n    </section>\n  );\n};\n\nexport default Home;\n","// Redux\nimport { connect } from \"react-redux\";\n// Icons\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\n// Actions\nimport { TOGGLE_AMOUNT, ADD_TO_CART } from \"../actions\";\n\nconst Product = ({ product, toggleAmount, addToCart }) => {\n  const { id, name, price, amount, img } = product;\n\n  return (\n    <article className=\"product-card\">\n      <div className=\"images-container\">\n        <img src={img} alt=\"pie\" />\n        <div className=\"product-card__infos\">\n          <div className=\"product-card__infos-header\">\n            <h4 className=\"product-card__infos-name\">{name}</h4>\n            <div className=\"product-quantity\">\n              <button\n                type=\"submit\"\n                onClick={() => toggleAmount(id, \"decrease\")}\n              >\n                <FaMinus />\n              </button>\n              <p>{amount}</p>\n              <button\n                type=\"submit\"\n                onClick={() => toggleAmount(id, \"increase\")}\n              >\n                <FaPlus />\n              </button>\n            </div>\n          </div>\n          <div className=\"product-cart__infos-footer\">\n            <p className=\"product-card__infos-price\">\n              <span className=\"dollar\">$</span>\n              {price}\n            </p>\n            <button\n              className=\"btn\"\n              onClick={(e) => addToCart(product, e.target)}\n            >\n              Add to cart\n            </button>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleAmount: (id, value) =>\n      dispatch({ type: TOGGLE_AMOUNT, payload: { id, value } }),\n    addToCart: (product, value) =>\n      dispatch({ type: ADD_TO_CART, payload: { product, value } }),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Product);\n","import { connect } from \"react-redux\";\nimport Product from \"./Product\";\nimport CheckoutSidebar from \"./CheckoutSidebar\";\n\nconst ProductList = ({ products }) => {\n\n  return (\n    <section className=\"shop-container\">\n      <h2>Our delicious pies!</h2>\n      <div className=\"product-container\">\n        {products.map((product) => {\n          return <Product key={product.id} product={product} />;\n        })}\n      </div>\n      {/* Checkout sidebar is hidden with CSS */}\n      <CheckoutSidebar />\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\n\nconst Shop = () => {\n\n  return (\n    <div className=\"shopping-container container-center\">\n      <ProductList />\n    </div>\n  );\n};\n\nexport default Shop;\n","const pies = [\n  {\n    id: 1,\n    name: \"Cherry Pie\",\n    price: 11,\n    amount: 1,\n    img: \"./images/cherry.jpeg\",\n  },\n  {\n    id: 2,\n    name: \"Apple Pie\",\n    price: 15,\n    amount: 1,\n    img: \"./images/apple.jpeg\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Pie\",\n    price: 18,\n    amount: 1,\n    img: \"./images/pumpkin.jpeg\",\n  },\n  {\n    id: 4,\n    name: \"Nut Pie\",\n    price: 10,\n    amount: 1,\n    img: \"./images/nut.jpeg\",\n  },\n  {\n    id: 5,\n    name: \"Lime Pie\",\n    price: 13,\n    amount: 1,\n    img: \"./images/lime.jpeg\",\n  },\n  {\n    id: 6,\n    name: \"Banana Pie\",\n    price: 6,\n    amount: 1,\n    img: \"./images/banana.jpeg\",\n  },\n  {\n    id: 7,\n    name: \"Raspberry Pie\",\n    price: 20,\n    amount: 1,\n    img: \"./images/raspberry.jpeg\",\n  },\n  {\n    id: 8,\n    name: \"Kiwi Pie\",\n    price: 5,\n    amount: 1,\n    img: \"./images/kiwi.jpeg\",\n  },\n];\nexport default pies;\n","import { connect } from \"react-redux\";\n// Route\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n// Page & Components\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Shop from \"./pages/Shop\";\n// Data\nimport data from \"./data\";\n// Action\nimport { LOAD_DATA, GET_CART_TOTALS } from \"./actions\";\nimport { useEffect } from \"react\";\n\nfunction App({ cart, dispatch }) {\n  useEffect(() => {\n    dispatch({ type: LOAD_DATA, payload: data });\n    dispatch({ type: GET_CART_TOTALS });\n  }, [cart]);\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/shopping-cart-redux\">\n          <Home />\n        </Route>\n        <Route exact path=\"/shopping-cart-redux/shop\">\n          <Shop />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nconst mapStateToProps = (state) => {\n  return { cart: state.cart };\n};\n\nexport default connect(mapStateToProps)(App);\n","export const setMinMaxAmount = (value) => {\n  // Max amount - Set max amount to item stock if any\n  if (value >= 10) {\n    return 10;\n  }\n  // Min amount\n  if (value < 0) {\n    return 0;\n  }\n  return value;\n};\n\nexport const changeButtonStyle = (element) => {\n  element.innerText = \"Added!\";\n  element.classList.add(\"green\");\n  setTimeout(() => {\n    element.innerText = \"Add to cart\";\n    element.classList.remove(\"green\");\n  }, 2500);\n};\n","import data from \"./data\";\nimport { setMinMaxAmount, changeButtonStyle } from \"./utils/helpers\";\nimport {\n  LOAD_DATA,\n  OPEN_CHECKOUT,\n  CLOSE_CHECKOUT,\n  TOGGLE_AMOUNT,\n  ADD_TO_CART,\n  REMOVE_CART,\n  UPDATE_CART_AMOUNT,\n  GET_CART_TOTALS,\n} from \"./actions\";\n\nconst reducer = (state, action) => {\n  if (action.type === LOAD_DATA) {\n    return { ...state, products: action.payload };\n  }\n  // SIDEBAR ACTIONS\n  if (action.type === OPEN_CHECKOUT) {\n    return { ...state, checkout: true };\n  }\n  if (action.type === CLOSE_CHECKOUT) {\n    return { ...state, checkout: false };\n  }\n  // PRODUCT LIST ACTIONS\n  if (action.type === TOGGLE_AMOUNT) {\n    let tempProduct = state.products.map((product) => {\n      if (\n        product.id === action.payload.id &&\n        action.payload.value === \"increase\"\n      ) {\n        let newAmount = setMinMaxAmount(product.amount + 1);\n        return { ...product, amount: newAmount };\n      }\n      if (\n        product.id === action.payload.id &&\n        action.payload.value === \"decrease\"\n      ) {\n        let newAmount = setMinMaxAmount(product.amount - 1);\n\n        return { ...product, amount: newAmount };\n      }\n      return product;\n    });\n    return {\n      ...state,\n      products: tempProduct,\n      checkout: false,\n    };\n  }\n  if (action.type === ADD_TO_CART) {\n    let checkProduct = state.cart.find(\n      (product) => product.id === action.payload.product.id\n    );\n    // Product doesnt exist -> Add new product to cart\n    if (!checkProduct) {\n      const newCart = [...state.cart, action.payload.product];\n      changeButtonStyle(action.payload.value);\n      return { ...state, cart: newCart };\n    }\n    // Product exist -> updating product amount\n    else {\n      // tempCart with an updated value of the product\n      let tempCart = state.cart.map((cartItem) => {\n        if (cartItem.id === action.payload.product.id) {\n          const newAmount = cartItem.amount + action.payload.product.amount;\n          return { ...cartItem, amount: newAmount };\n        }\n        return cartItem;\n      });\n      changeButtonStyle(action.payload.value);\n      const resetProducts = [...data];\n      return { ...state, products: resetProducts, cart: tempCart };\n    }\n  }\n  // CHECKOUT PAGE ACTION\n  if (action.type === REMOVE_CART) {\n    let newCart = state.cart.filter(\n      (cartItem) => cartItem.id !== action.payload\n    );\n    return { ...state, cart: newCart };\n  }\n\n  if (action.type === UPDATE_CART_AMOUNT) {\n    let tempCart = state.cart.map((cartItem) => {\n      if (\n        cartItem.id === action.payload.id &&\n        action.payload.value === \"increase\"\n      ) {\n        let newAmount = setMinMaxAmount(cartItem.amount + 1);\n        return { ...cartItem, amount: newAmount };\n      }\n      if (\n        cartItem.id === action.payload.id &&\n        action.payload.value === \"decrease\"\n      ) {\n        let newAmount = setMinMaxAmount(cartItem.amount - 1);\n        return { ...cartItem, amount: newAmount };\n      }\n      return cartItem;\n    });\n    return { ...state, cart: tempCart };\n  }\n\n  if (action.type === GET_CART_TOTALS) {\n    const getTotals = state.cart.reduce(\n      (cartTotal, cartItem) => {\n        cartTotal.amount += cartItem.amount;\n        cartTotal.total += cartItem.amount * cartItem.price;\n        return cartTotal;\n      },\n      {\n        total: 0,\n        amount: 0,\n      }\n    );\n    return {\n      ...state,\n      cartAmount: getTotals.amount,\n      cartTotal: getTotals.total,\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n// Redux Installation :\n// - npm install --save redux\n// - npm install --save react-redux (Provider)\n// - npm install --save-dev redux-devtools\n\n// Redux Setup\nimport reducer from \"./reducer\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\n// Set initial Store values\nconst initialStore = {\n  products: [],\n  cart: [],\n  cartAmount: 0,\n  cartTotal: 0,\n  checkout: false,\n};\n// Create Store\nconst store = createStore(\n  reducer,\n  initialStore,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}